<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo使用简介</title>
    <url>/2023/05/01/Hexo%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h2 id="Hexo的使用"><a href="#Hexo的使用" class="headerlink" title="Hexo的使用"></a>Hexo的使用</h2><h3 id="GitHub-Page"><a href="#GitHub-Page" class="headerlink" title="GitHub Page"></a>GitHub Page</h3><p>Github Page可以方便的部署静态网站，当需要设置个人主页时，可以建立一个新的库，库的名字时<code>username.github.io</code>,其中username是用户的用户名。在库的setting页面上设置setting page,让其source指向master节点。</p>
<span id="more"></span>
<h3 id="创建一个Hexo项目"><a href="#创建一个Hexo项目" class="headerlink" title="创建一个Hexo项目"></a>创建一个Hexo项目</h3><p>Hexo是依赖Webpack的一个框架，因此是依赖Node.js的。当Node.js已经安装后，我们使用<code>npm install -g hexo-cli</code>命令安装hexo脚手架。完成之后，我们可以使用脚手架新建一个Hexo项目。具体的命令为<code>hexo init blog</code>。</p>
<h3 id="Hexo项目的本地运行"><a href="#Hexo项目的本地运行" class="headerlink" title="Hexo项目的本地运行"></a>Hexo项目的本地运行</h3><p>如果想在本地预览Hexo的效果，可以在命令行输入<code>hexo server</code>命令在本地部署网页，这样就可以在本地预览效果。</p>
<h3 id="Hexo的部署"><a href="#Hexo的部署" class="headerlink" title="Hexo的部署"></a>Hexo的部署</h3><p>当拥有了一个Hexo项目之后，我们就可以将他部署到GitHub Page上了。首先，在该项目中使用<code>npm install hexo-deployer-git --save</code>下载git插件，然后，修改项目根目录下的 <code>_config.yml</code> 文件。我们修改该文件末尾的deploy节点信息，具体代码如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">deploy<span class="punctuation">:</span></span><br><span class="line">  type<span class="punctuation">:</span> git</span><br><span class="line">  repository<span class="punctuation">:</span> https<span class="punctuation">:</span><span class="comment">//github.com/username/username.github.io.git</span></span><br><span class="line">  branch<span class="punctuation">:</span> master</span><br></pre></td></tr></table></figure>

<p>其中respository表示需要部署的库的地址。branch表示需要上传的代码的分支是master。</p>
<p>将修改之后的配置文件保存之后，我们使用<code>hexo generate</code>或<code>hexo g</code>命令生成静态文件，然后使用<code>hexo deploy</code>命令将文件部署到GitHub上。</p>
<h3 id="更改Blog的主题"><a href="#更改Blog的主题" class="headerlink" title="更改Blog的主题"></a>更改Blog的主题</h3><p><a href="https://hexo.io/themes/">Hexo</a>提供了很多开源的主题，这些主题通过git保存到项目的库中以后可以通过更改_config.yml中<code>theme:</code>项来改变配置。</p>
<h3 id="创建新的页面"><a href="#创建新的页面" class="headerlink" title="创建新的页面"></a>创建新的页面</h3><p>新的页面的创建可以由指令<code>hexo new pagename</code>来创建，创建之后，会自动生成一个md文件。如果需要生成一个新的文件夹，则只需要将命令改写成<code>hexo new page dirname</code>就可以了。对于每一个md文件的头部需要生成一些关键的信息。具体的格式如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &quot;Hello World&quot;</span><br><span class="line">date: 2022-05-15 10:00:00</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> 技术</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> Hexo</span><br><span class="line"><span class="section">- Blog</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<p>其中tags可以有多个而categories只能有一个。</p>
]]></content>
      <categories>
        <category>index</category>
      </categories>
      <tags>
        <tag>第一个</tag>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Latex的使用</title>
    <url>/2023/05/01/Latex/</url>
    <content><![CDATA[<h2 id="Latex环境和命令"><a href="#Latex环境和命令" class="headerlink" title="Latex环境和命令"></a>Latex环境和命令</h2><p>$latex{}$ 的命令以\开头，而环境是指用以令一些效果在局部生效，或是生成特殊的文档元素。LATEX 环境</p>
<p>的用法为一对命令 \begin 和 \end</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\begin&#123;⟨environment name⟩&#125;[⟨optional arguments⟩]&#123;⟨mandatory arguments⟩&#125;</span><br><span class="line">…</span><br><span class="line">\end&#123;⟨environment name⟩&#125;</span><br></pre></td></tr></table></figure>

<p>其中 <em>⟨<strong>environment name</strong>⟩</em> 为环境名，\begin 和 \end 中填写的环境名应当一致。类似命令，</p>
<p>{<em>⟨<strong>mandatory arguments</strong>⟩</em>} 和 [<em>⟨<strong>optional arguments</strong>⟩</em>] 为环境所需的必选和可选参数。LATEX 环</p>
<p>境可能需要一个或多个必选&#x2F;可选参数，也可能完全不需要参数。部分环境允许嵌套使用。</p>
<h3 id="Latex源代码结构"><a href="#Latex源代码结构" class="headerlink" title="Latex源代码结构"></a>Latex源代码结构</h3><p>LATEX 源代码以一个 \documentclass 命令作为开头，它指定了文档使用的<strong>文档类</strong>。docu</p>
<p>ment 环境当中的内容是文档正文。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\documentclass[⟨options⟩]&#123;⟨class-name⟩&#125;</span><br></pre></td></tr></table></figure>



<p>在 \documentclass 和 \begin{document} 之间的位置称为<strong>导言区</strong>。在导言区中常会使用</p>
<p>\usepackage 命令调用<strong>宏包</strong>，还会进行文档的全局设置。</p>
<p><img src="C:\Users\yhm36\AppData\Roaming\Typora\typora-user-images\image-20230424224310764.png" alt="image-20230424224310764"></p>
<h3 id="Latex排版文字"><a href="#Latex排版文字" class="headerlink" title="Latex排版文字"></a>Latex排版文字</h3><p>使用latex排版中文的时候需要引入ctex包，代码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\usepackage&#123;ctex&#125;</span><br></pre></td></tr></table></figure>

<h2 id="空格和分段"><a href="#空格和分段" class="headerlink" title="空格和分段"></a>空格和分段</h2><p>latex中每行开头的空格无效，一个或多个空格被视为一个空格。可以使用\par命令让文字分段。文末的一个换行符被视为一个空格，但多个换行符被视为一个换行符（对中文无效）</p>
<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>latex使用%进行注释，该字符到行末的所有文字都被忽略</p>
<h3 id="字体的设置"><a href="#字体的设置" class="headerlink" title="字体的设置"></a>字体的设置</h3><p>Latex中设置正文字体的时候使用 \setmainfont命令。例如，如果要设置字体为宋体，命令为\setmainfont{Simsun}</p>
<p>在\documentclass[11pt,a4paper]{article}命令中可以设置正文字体大小和使用的纸张大小。</p>
<h3 id="行间距的设置"><a href="#行间距的设置" class="headerlink" title="行间距的设置"></a>行间距的设置</h3><p>Latex中通过引入宏包</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;setspace&#125; <span class="comment">% 加载 setspace 宏包</span></span><br><span class="line"><span class="keyword">\setstretch</span>&#123;1.5&#125; <span class="comment">% 设置行距为1.5倍</span></span><br></pre></td></tr></table></figure>

<p>通过这种方式设置行间距。</p>
<h3 id="设置目录"><a href="#设置目录" class="headerlink" title="设置目录"></a>设置目录</h3><p>通过引入包hyperref然后在文档内容中加入目录，具体代码如下：</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;hyperref&#125; <span class="comment">% 引入超链接包</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\newpage</span> <span class="comment">% 新页</span></span><br><span class="line"><span class="keyword">\tableofcontents</span> <span class="comment">% 生成目录</span></span><br></pre></td></tr></table></figure>

<p>这样生成的目录可以使用超链接且独占一页。</p>
<h2 id="排版"><a href="#排版" class="headerlink" title="排版"></a>排版</h2><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>可以使用\section{}标签生成一级段落，\subsection{}生成二级段落。 \subsubsection{} 生成三级段落。</p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>使用</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;enumerate&#125;</span><br><span class="line"><span class="keyword">\item</span> 表项一</span><br><span class="line"><span class="keyword">\item</span> 表项二</span><br><span class="line">···</span><br><span class="line"><span class="keyword">\end</span>&#123;enumerate&#125;</span><br></pre></td></tr></table></figure>

<p>生成有序列表，使用</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;itemize&#125;</span><br><span class="line"><span class="keyword">\item</span> 表项一</span><br><span class="line"><span class="keyword">\item</span> 表项二</span><br><span class="line">···</span><br><span class="line"><span class="keyword">\end</span>&#123;itemize&#125;</span><br></pre></td></tr></table></figure>

<p>生成无序列表。如果要将标签数字用括号括起，使用</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;enumitem&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;enumerate&#125;[label=(<span class="keyword">\arabic</span>*)]</span><br><span class="line">    <span class="keyword">\item</span> 第一项内容</span><br><span class="line">    <span class="keyword">\item</span> 第二项内容</span><br><span class="line">    <span class="keyword">\item</span> 第三项内容</span><br><span class="line"><span class="keyword">\end</span>&#123;enumerate&#125;</span><br></pre></td></tr></table></figure>

<p>其中*表示使用括号</p>
<h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><p>如何需要添加一个公式段落，可以使用</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;<span class="keyword">\label</span>&#123;eq:eq1&#125;</span><br><span class="line">f(x)=a<span class="built_in">^</span>x+b</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br></pre></td></tr></table></figure>

<p>其中label标签中定义了公式的引用key，在文章的其他部分可以使用\ref{eq:eq1}来进行引用。</p>
<p>常用的公式符号如下：</p>
<table>
<thead>
<tr>
<th>符号</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>&#x3D;</td>
<td>赋值</td>
</tr>
<tr>
<td>&amp;</td>
<td>对齐符号</td>
</tr>
<tr>
<td>+</td>
<td>加法</td>
</tr>
<tr>
<td>-</td>
<td>减法</td>
</tr>
<tr>
<td>*</td>
<td>乘法</td>
</tr>
<tr>
<td>&#x2F;</td>
<td>除法</td>
</tr>
<tr>
<td>%</td>
<td>取模</td>
</tr>
<tr>
<td>^</td>
<td>指数</td>
</tr>
<tr>
<td>()</td>
<td>括号，用于改变优先级</td>
</tr>
<tr>
<td>{}</td>
<td>大括号，用于组合数学表达式</td>
</tr>
<tr>
<td>[]</td>
<td>中括号，用于表示向量或矩阵</td>
</tr>
<tr>
<td>_</td>
<td>下划线，用于表示下标</td>
</tr>
<tr>
<td>^{}</td>
<td>脚注，用于表示上标</td>
</tr>
<tr>
<td>\sqrt{}</td>
<td>开方</td>
</tr>
<tr>
<td>\frac{}{}</td>
<td>分数</td>
</tr>
<tr>
<td>\sum</td>
<td>求和</td>
</tr>
<tr>
<td>\int</td>
<td>积分</td>
</tr>
<tr>
<td>\lim</td>
<td>极限</td>
</tr>
<tr>
<td>\infty</td>
<td>无穷</td>
</tr>
<tr>
<td>\pm</td>
<td>正负号</td>
</tr>
<tr>
<td>\neq</td>
<td>不等于号</td>
</tr>
<tr>
<td>\leq</td>
<td>小于等于号</td>
</tr>
<tr>
<td>\geq</td>
<td>大于等于号</td>
</tr>
<tr>
<td>\mathop{\max}\limits_{x}</td>
<td>$\mathop{\max}\limits_{x}$</td>
</tr>
</tbody></table>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>如果要插入图片，首先要引入graphicx包，具体的代码如下：</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;</span><br><span class="line"><span class="keyword">\centering</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\includegraphics</span>[width=0.5<span class="keyword">\textwidth</span>]&#123;Figure1.png&#125;</span><br><span class="line"><span class="keyword">\caption</span>&#123;DeepId模型结构图&#125; <span class="keyword">\label</span>&#123;fig:Figure1&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br></pre></td></tr></table></figure>

<p>caption为图片题注，label为引用标签，\centering为设置图片居中</p>
<p>$y^i_{j,k}&#x3D;\mathop{\max}\limits_{0\le m,n&lt;s}{x^i_{j\cdot s+m,k\cdot s+n}}$</p>
<p>$y_j&#x3D;max\big(0,\sum\limits_ix^1_i\cdot w^1_{i,j}+\sum\limits_{i}x^2_i\cdot w^2_{i,j}+b_j\big)$</p>
<p>$y_i&#x3D;\frac{exp(y’<em>i)}{\sum^n</em>{i&#x3D;1}exp(y’_j)}$</p>
<h2 id="文献的引用"><a href="#文献的引用" class="headerlink" title="文献的引用"></a>文献的引用</h2><p>在$Latex$中，通常可以使用BibTeX文件对文件进行引用。BibTex是一个单独的文献引用数据库，其基本的格式是：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">@article<span class="punctuation">&#123;</span>smith01<span class="punctuation">,</span></span><br><span class="line">  author = <span class="string">&quot;John Smith&quot;</span><span class="punctuation">,</span></span><br><span class="line">  title = <span class="string">&quot;A new approach to computer vision&quot;</span><span class="punctuation">,</span></span><br><span class="line">  journal = <span class="string">&quot;IEEE Transactions on Pattern Analysis and Machine Intelligence&quot;</span><span class="punctuation">,</span></span><br><span class="line">  volume = <span class="string">&quot;23&quot;</span><span class="punctuation">,</span></span><br><span class="line">  number = <span class="string">&quot;12&quot;</span><span class="punctuation">,</span></span><br><span class="line">  pages = <span class="string">&quot;1331--1335&quot;</span><span class="punctuation">,</span></span><br><span class="line">  year = <span class="string">&quot;2001&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这个例子中的文献条目包括作者、标题、期刊名称、卷、期、页码和年份等信息。</p>
<p>之后可以在LaTeX文档中使用\cite命令引用文献，例如：</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line">According to Smith <span class="keyword">\cite</span>&#123;smith01&#125;, computer vision is a challenging field.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>之后在LaTeX文档中需要生成文献参考表的位置指定BibTeX文件的位置和样式，例如：</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\bibliography</span>&#123;mybibfile&#125;</span><br><span class="line"><span class="keyword">\bibliographystyle</span>&#123;plain&#125;</span><br></pre></td></tr></table></figure>

<p>最后，先使用xelatex编译一遍源文件，然后使用BibTex编译一遍源文件，然后再用xelatex编译一遍源文件就可以生成正确的pdf文件了。</p>
]]></content>
      <categories>
        <category>Latex</category>
      </categories>
      <tags>
        <tag>Latex</tag>
        <tag>论文排版工具</tag>
      </tags>
  </entry>
  <entry>
    <title>graph survey</title>
    <url>/2023/05/01/graphsurvey/</url>
    <content><![CDATA[<h1 id="graph-survey"><a href="#graph-survey" class="headerlink" title="graph survey"></a>graph survey</h1><h2 id="introduction"><a href="#introduction" class="headerlink" title="introduction"></a>introduction</h2><ul>
<li><p>Graph ananalytics mainly includes s graph processing, graph mining, and graph learning.(图像处理，图像挖掘，图学习)</p>
</li>
<li><p>Graph Processing. Conventional grapg algorithms are designed to process graphs iteratively(迭代) until covergence(收敛). (<a href="https://zhuanlan.zhihu.com/p/137561088">PageRank算法</a>，<a href="https://blog.csdn.net/weixin_41579721/article/details/114552443">单源最短路径算法</a>)</p>
<ul>
<li>are based on traversal operations and generally focus on performing linear algebra-like computational operations on the graph.</li>
</ul>
</li>
<li><p>Graph mining. Graph mining aims to discover specific structures or patterns in graphs.</p>
<ul>
<li><p>graph mining technology is an ideal tool for dealing with complex data structures because of its complex data object relationships and rich data presentation. </p>
</li>
<li><p>graph mining can be used to discover structure</p>
<p>content relationships in social media data, to mine</p>
<p>community-dense subgraphs, to extract network motifs or</p>
<p>signifificant subgraphs in protein-protein or gene interaction</p>
<p>networks, to discover 3D motifs in protein structures or</p>
<p>chemical compounds, etc.</p>
</li>
</ul>
</li>
<li><p>Graph learning. </p>
<ul>
<li>graphs can characterize the relationships between everything.</li>
<li>Graph neural networks establish a deep learning framework for non-Euclidean spatial data, and compared to traditional network representation learning, it is able to perform deeper information aggregation operations on graph structures than traditional network representation learning models.（图神经网络为非欧几里得空间数据建立了深度学习框架，与传统的网络表示学习相比，它能够比传统的网络表示学习模型对图结构执行更深入的信息聚合作。）</li>
</ul>
</li>
</ul>
<h2 id="background"><a href="#background" class="headerlink" title="background"></a>background</h2><ul>
<li><p>graph  Terminology</p>
<ul>
<li>The formula for a graph is G &#x3D;(V,E), where V stands for the vertex set and E for the edge set.  Each vertex and each edge has its attribute value at the same time.</li>
</ul>
</li>
<li><p>Domain-Specifific Architecture Types for Graph Analytics.</p>
<p>FPGA-Based Architecture.</p>
<ul>
<li><p>consists various types of programmable resources, which enables developers to rapidly prototype application-specifific accelerators using dedicated hardware description languages and reconfigure these accelerators as often as needed. (使开发人员能够使用专用的硬件描述语言快速地原型化特定于应用程序的加速器，并根据需要经常重新配置这些加速器。)</p>
</li>
<li><p>offer reconfifigurability at the expense of lowered</p>
<p>clock frequencies, which is about 10 × lower than that of</p>
<p>CPUs(降低了时钟的频率)</p>
</li>
</ul>
</li>
</ul>
<h2 id="Software-Systems-Implementation-for-Graph-Analytics"><a href="#Software-Systems-Implementation-for-Graph-Analytics" class="headerlink" title="Software Systems Implementation for Graph Analytics"></a>Software Systems Implementation for Graph Analytics</h2><h3 id="Software-Graph-Processing-Systems"><a href="#Software-Graph-Processing-Systems" class="headerlink" title="Software Graph Processing Systems"></a>Software Graph Processing Systems</h3><ul>
<li><p>can be classifified into two main categories: single-machine graph processing systems and distributed graph processing systems.</p>
</li>
<li><p>According to whether the graph data can be stored in memory during processing, these systems can be divided into in-memory graph processing systems and out-of-core graph processing systems.</p>
</li>
<li><p>Single-Machine Graph Processing Systems. </p>
<ul>
<li>Single machine graph processing systems can fully exploit the ability of a single machine to handle graph computation tasks and avoid the expensive network communication overhead in distributed systems. </li>
<li>统受到固定的硬件资源的限制，无法实现良好的可伸缩性，并且处理时间通常与图形数据的大小成正比。</li>
<li>Single-machine in-memory graph processing systems often have multiple cores and support very large memory of more than 1 TB, allowing them to handle graph data with hundreds of billions of edges.  However, single shared memory systems can only scale by increasing the number of CPUs or expanding the memory size.</li>
<li>Ligra is a lightweight shared memory-based single machine graph processing system, which provides programming abstraction based on edgeMap function, vertexMap function, and vertexSubset type, simplifying the writing of graph processing algorithms.</li>
<li>The key idea of Galois [85] single-machine graph processing system is to fully exploit the benefifits of autonomous scheduling in a data-driven computing mode.</li>
</ul>
</li>
<li><p>Distributed Graph Processing Systems.</p>
<ul>
<li>A distributed graph computing system consists of multiple computing nodes, each of which has its own memory and external memory. Therefore, compared to single-machine graph computing systems, distributed graph processing systems are less limited by hardware in terms of scalability.</li>
<li>设计一个合适的数据划分策略是一个挑战。同时，计算节点之间的通信成为性能的瓶颈</li>
</ul>
</li>
</ul>
<h3 id="Software-Graph-Mining-Systems"><a href="#Software-Graph-Mining-Systems" class="headerlink" title="Software Graph Mining Systems"></a>Software Graph Mining Systems</h3><ul>
<li><p>They search for subgraphs that satisfy the conditions of the algorithm in the input graph G. The process of finding subgraphs can be modeled with a search tree where each node represents a subgraph, and the subgraphs at the k+1 level are expanded from the subgraphs at the k level.</p>
<p><img src="/%5Ctypora-user-images%5Cimage-20230312162325702.png" alt="image-20230312162325702"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>图神经网络</category>
      </categories>
      <tags>
        <tag>图学习</tag>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>docker使用笔记</title>
    <url>/2023/05/01/dockernote/</url>
    <content><![CDATA[<h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><h3 id="搜索-Docker-镜像"><a href="#搜索-Docker-镜像" class="headerlink" title="搜索 Docker 镜像"></a>搜索 Docker 镜像</h3><p>Docker Hub 是 Docker 镜像的官方仓库，可以通过 docker search 命令在 Docker Hub 中搜索需要的镜像。例如，要搜索 Ubuntu 镜像，可以使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker search ubuntu</span><br></pre></td></tr></table></figure>



<h3 id="下载-Docker-镜像"><a href="#下载-Docker-镜像" class="headerlink" title="下载 Docker 镜像"></a>下载 Docker 镜像</h3><p>可以使用 docker pull 命令从 Docker Hub 下载需要的镜像。例如，要下载 Ubuntu 18.04 镜像，可以使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull ubuntu:18.04</span><br></pre></td></tr></table></figure>



<h3 id="运行-Docker-容器"><a href="#运行-Docker-容器" class="headerlink" title="运行 Docker 容器"></a>运行 Docker 容器</h3><p>可以使用 docker run 命令运行 Docker 容器。例如，要在 Ubuntu 18.04 镜像上运行一个新的容器，可以使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it --name mycontainer ubuntu:18.04</span><br></pre></td></tr></table></figure>

<p>该命令中，-it 表示以交互模式运行容器，–name 指定容器名称，ubuntu:18.04 是镜像名称和标签。</p>
<h3 id="查看-Docker-容器"><a href="#查看-Docker-容器" class="headerlink" title="查看 Docker 容器"></a>查看 Docker 容器</h3><p>可以使用 docker ps 命令查看正在运行的容器。例如，要查看正在运行的容器，可以使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure>



<h3 id="进入-Docker-容器"><a href="#进入-Docker-容器" class="headerlink" title="进入 Docker 容器"></a>进入 Docker 容器</h3><p>可以使用 docker exec 命令进入正在运行的容器。例如，要进入 mycontainer 容器，可以使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mycontainer /bin/bash</span><br></pre></td></tr></table></figure>

<p>该命令中，-it 表示以交互模式进入容器，mycontainer 是容器名称，&#x2F;bin&#x2F;bash 是要进入的终端程序。</p>
<h3 id="停止-Docker-容器"><a href="#停止-Docker-容器" class="headerlink" title="停止 Docker 容器"></a>停止 Docker 容器</h3><p>可以使用 docker stop 命令停止正在运行的容器。例如，要停止 mycontainer 容器，可以使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop mycontainer</span><br></pre></td></tr></table></figure>



<h3 id="删除-Docker-容器"><a href="#删除-Docker-容器" class="headerlink" title="删除 Docker 容器"></a>删除 Docker 容器</h3><p>可以使用 docker rm 命令删除已停止的容器。例如，要删除 mycontainer 容器，可以使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> mycontainer</span><br></pre></td></tr></table></figure>



<h3 id="docker-Hadoop"><a href="#docker-Hadoop" class="headerlink" title="docker Hadoop"></a>docker Hadoop</h3><ul>
<li>创建集群</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>

<ul>
<li>关闭集群</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker-compose down</span><br></pre></td></tr></table></figure>

<ul>
<li>添加文件夹</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir dirname</span><br></pre></td></tr></table></figure>

<ul>
<li>移除文件夹</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -r dirname</span><br></pre></td></tr></table></figure>

<ul>
<li>将外部文件拷贝到容器中</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker cp filepath containerID:path</span><br></pre></td></tr></table></figure>

<ul>
<li>上传文件到hdfs</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hdfs dfs -put file filepath</span><br></pre></td></tr></table></figure>

<ul>
<li>将文件移动到本地</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hdfs dfs -get file filepath</span><br></pre></td></tr></table></figure>

<ul>
<li><p>运行样例</p>
<p><img src="/%5Ctypora-user-images%5Cimage-20221029140122971.png" alt="image-20221029140122971"></p>
</li>
</ul>
<p><img src="/%5Ctypora-user-images%5Cimage-20221029140150160.png" alt="image-20221029140150160"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-2.9.2.jar wordcount /wordcount/input/ /wordcount/output</span><br></pre></td></tr></table></figure>









<h3 id="spark"><a href="#spark" class="headerlink" title="spark"></a>spark</h3><ul>
<li><p>运行指令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -it apache/spark-py /opt/spark/bin/pyspark</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>虚拟机</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>虚拟机</tag>
      </tags>
  </entry>
  <entry>
    <title>html-CSS学习笔记</title>
    <url>/2023/05/01/html-css/</url>
    <content><![CDATA[<h2 id="html常用标签"><a href="#html常用标签" class="headerlink" title="html常用标签"></a>html常用标签</h2><h4 id="1-标题标签-lt-h1-gt-lt-h6-gt"><a href="#1-标题标签-lt-h1-gt-lt-h6-gt" class="headerlink" title="1.标题标签 &lt;h1&gt;-&lt;h6&gt; ####"></a>1.标题标签 &lt;h1&gt;-&lt;h6&gt; ####</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标签<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">    二级标签</span><br><span class="line"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="2-段落标签和换行标签"><a href="#2-段落标签和换行标签" class="headerlink" title="2.段落标签和换行标签"></a>2.段落标签和换行标签</h4><p>在html中，&lt;p&gt;标签用于定义段落，可以将网页分为若干段。&lt;br&#x2F;&gt;为换行标签，是一个单标签</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    段落标签</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">反对法地方<span class="tag">&lt;<span class="name">br</span>/&gt;</span>测试</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3-文本格式化标签"><a href="#3-文本格式化标签" class="headerlink" title="3.文本格式化标签"></a>3.文本格式化标签</h4><table>
<thead>
<tr>
<th align="center">语义</th>
<th>标签</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>加粗</strong></td>
<td><strong></strong></td>
</tr>
<tr>
<td align="center"><em>倾斜</em></td>
<td><em></em></td>
</tr>
<tr>
<td align="center"><del>删除线</del></td>
<td><del></del></td>
</tr>
<tr>
<td align="center"><u>下划线</u></td>
<td><ins></ins></td>
</tr>
</tbody></table>
<h4 id="4-lt-div-gt-与-lt-span-gt-标签"><a href="#4-lt-div-gt-与-lt-span-gt-标签" class="headerlink" title="4.&lt;div&gt;与&lt;span&gt;标签"></a>4.&lt;div&gt;与&lt;span&gt;标签</h4><p>相当于一个容器，用于布局。其中div标签一个占一行，而span一行可以放多个</p>
<h4 id="5-图像标签的使用"><a href="#5-图像标签的使用" class="headerlink" title="5.图像标签的使用"></a>5.图像标签的使用</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片的url&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>图像标签的属性有：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>属性值</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>src</td>
<td>图片路径</td>
<td>必须属性</td>
</tr>
<tr>
<td>alt</td>
<td>文本</td>
<td>图像不显示时的替换文字</td>
</tr>
<tr>
<td>title</td>
<td>文本</td>
<td>提示文本，鼠标放上去时显示的文字</td>
</tr>
<tr>
<td>width</td>
<td>像素</td>
<td>图像宽度</td>
</tr>
<tr>
<td>height</td>
<td>像素</td>
<td>图像高度</td>
</tr>
<tr>
<td>border</td>
<td>像素</td>
<td>图像边框</td>
</tr>
</tbody></table>
<p>&#x3D;&#x3D;图片相对路径为图片相对于html文件的路径，分为同一级、下一级（&#x2F;)、上一级（..&#x2F;）&#x3D;&#x3D;</p>
<h4 id="6-插入链接标签"><a href="#6-插入链接标签" class="headerlink" title="6.插入链接标签"></a>6.插入链接标签</h4><p>链接标签符号为<a>,包含的属性为：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>href</td>
<td>指定链接目标的url地址。如果为外部链接，必须以http:&#x2F;&#x2F;开头</td>
</tr>
<tr>
<td>target</td>
<td>用于指定链接页面的打开方式，其中_self为默认值，__blank为在新窗口中打开方式</td>
</tr>
</tbody></table>
<p>可以在<!--<a href="">添加图片文字等组件</a>--></p>
<p>如果href&#x3D;”#” 表示是空链接，如果链接指向一个.exe或.zip则是一个下载链接</p>
<p><strong>锚点链接</strong>：在链接的href中设置属性值为“#name”，在需要跳转的标签位置添加id属性。如<h3 id="name"></p>
<h4 id="7-特殊字符"><a href="#7-特殊字符" class="headerlink" title="7.特殊字符"></a>7.特殊字符</h4><table>
<thead>
<tr>
<th align="center">特殊字符</th>
<th align="center">描述</th>
<th align="center">符号</th>
</tr>
</thead>
<tbody><tr>
<td align="center"></td>
<td align="center">空格</td>
<td align="center">&amp;nbsp;</td>
</tr>
<tr>
<td align="center">&lt;</td>
<td align="center">小于</td>
<td align="center">&amp;lt;</td>
</tr>
<tr>
<td align="center">&gt;</td>
<td align="center">大于</td>
<td align="center">&amp;gt;</td>
</tr>
<tr>
<td align="center">&amp;</td>
<td align="center"></td>
<td align="center">&amp;amp;</td>
</tr>
<tr>
<td align="center">&amp;yen;</td>
<td align="center"></td>
<td align="center">&amp;yen;</td>
</tr>
<tr>
<td align="center">&amp;copy;</td>
<td align="center">版权</td>
<td align="center">&amp;copy;</td>
</tr>
<tr>
<td align="center">&amp;reg;</td>
<td align="center">注册版权</td>
<td align="center">&amp;reg;</td>
</tr>
<tr>
<td align="center">&amp;deg;</td>
<td align="center">摄氏度</td>
<td align="center">&amp;deg;</td>
</tr>
<tr>
<td align="center">&amp;plusmn;</td>
<td align="center">正负号</td>
<td align="center">&amp;plusmn;</td>
</tr>
<tr>
<td align="center">&amp;times;</td>
<td align="center">乘</td>
<td align="center">&amp;times;</td>
</tr>
<tr>
<td align="center">&amp;divide;</td>
<td align="center">除</td>
<td align="center">&amp;divide;</td>
</tr>
<tr>
<td align="center">&amp;sup2;</td>
<td align="center">平方</td>
<td align="center">&amp;sup2;</td>
</tr>
<tr>
<td align="center">&amp;sup3;</td>
<td align="center">立方</td>
<td align="center">&amp;sup3;</td>
</tr>
</tbody></table>
<h4 id="8-表格"><a href="#8-表格" class="headerlink" title="8.表格"></a>8.表格</h4><p>表格用于展示数据，可以使数据非常整洁</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--表格基本语法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>表头1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>表头2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中 &lt;table&gt; 用于定义表格；&lt;tr&gt;用于定义行；&lt;td&gt;用于定义表格的单元格</p>
<p>&lt;th&gt;为表头标签。所有的表头可以用&lt;thead&gt;包住，内容由&lt;tbody&gt;包住。</p>
<p>单元格的删除：在目标单元格&lt;td colspan&#x3D;”2”&gt;表示从该单元格开始跨列合并2个单元格。跨行合并为rowspan。</p>
<h4 id="9-列表"><a href="#9-列表" class="headerlink" title="9.列表"></a>9.列表</h4><p>列表的特点使整洁、整洁、有序，它可以用于页面布局</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--无序列表，&lt;ul&gt;内只能有&lt;li&gt;标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>&lt;li&gt;标签内可以放任何元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--ol为有序列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--dl为自定义列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词一<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词一解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词一解释二<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="10-表单标签"><a href="#10-表单标签" class="headerlink" title="10.表单标签"></a>10.表单标签</h4><p>表单由表单域、表单控件、提示信息组成</p>
<p>输入组件为&lt;input type&#x3D;””&#x2F;&gt;是一个单组件。type可以是text；如果是”password”则可以输入密码。</p>
<p>单选按钮为&lt;input type&#x3D;”radio”&gt; checkbox为复选框。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span>/&gt;</span> 女<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>name</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>前端学习</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
</search>
